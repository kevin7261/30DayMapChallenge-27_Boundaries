{"version":3,"file":"js/app.c654e3d4.js","mappings":"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","sources":["webpack://30DayMapChallenge-27_Boundaries/./src/App.vue","webpack://30DayMapChallenge-27_Boundaries/./src/App.vue?7ccd","webpack://30DayMapChallenge-27_Boundaries/./src/views/HomeView.vue","webpack://30DayMapChallenge-27_Boundaries/./src/tabs/MapTab.vue","webpack://30DayMapChallenge-27_Boundaries/./src/stores/dataStore.js","webpack://30DayMapChallenge-27_Boundaries/./src/tabs/MapTab.vue?15ab","webpack://30DayMapChallenge-27_Boundaries/./src/views/HomeView.vue?1da1","webpack://30DayMapChallenge-27_Boundaries/./src/router/index.js","webpack://30DayMapChallenge-27_Boundaries/./src/main.js","webpack://30DayMapChallenge-27_Boundaries/webpack/bootstrap","webpack://30DayMapChallenge-27_Boundaries/webpack/runtime/chunk loaded","webpack://30DayMapChallenge-27_Boundaries/webpack/runtime/compat get default export","webpack://30DayMapChallenge-27_Boundaries/webpack/runtime/define property getters","webpack://30DayMapChallenge-27_Boundaries/webpack/runtime/global","webpack://30DayMapChallenge-27_Boundaries/webpack/runtime/hasOwnProperty shorthand","webpack://30DayMapChallenge-27_Boundaries/webpack/runtime/jsonp chunk loading","webpack://30DayMapChallenge-27_Boundaries/webpack/startup"],"sourcesContent":["<script>\n  /**\n   * 🏠 App.vue - 應用程式主組件\n   *\n   * 功能說明：\n   * 1. 🏗️ 提供應用程式整體框架和佈局結構\n   * 2. ⏳ 管理全域載入狀態和進度顯示\n   * 3. 🚀 管理 Vue Router 的路由導航系統\n   * 4. 📱 實現響應式滿版佈局，無邊距和空隙\n   *\n   * 架構說明：\n   * - 內容層：路由視圖容器，動態顯示不同頁面組件\n   *\n   * 設計理念：\n   * - 滿版無邊距佈局設計\n   * - 模組化組件架構\n   */\n\n  export default {\n    name: 'App',\n  };\n</script>\n\n<template>\n  <!-- 🏠 App.vue - 主應用程式組件 (Main Application Component) -->\n  <!-- 提供應用程式整體框架，使用 Bootstrap 實現滿版無空隙佈局 -->\n  <div id=\"app\" class=\"d-flex flex-column vh-100\">\n    <!-- 📱 主要內容區域 (Main Content Area) -->\n    <div class=\"d-flex flex-column overflow-hidden\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<style>\n  /**\n * 🎨 應用程式全域樣式 (Application Global Styles)\n *\n * 引入共用 CSS 並定義應用程式層級的樣式\n * 注意：大部分樣式已移至 common.css 中統一管理\n */\n\n  /* 📦 引入共用樣式表 (Import Common Stylesheets) */\n  @import './assets/css/common.css';\n\n  /* 📱 應用程式特定樣式 (App-Specific Styles) */\n  /* 其他樣式已整合至 common.css 中，避免重複定義 */\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=1e6196ea\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=1e6196ea&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  /**\n   * 🏠 HomeView.vue - 主頁面組件 (Main Page Component)\n   *\n   * 這是應用程式的主頁面，顯示全屏世界地圖。\n   * 主要功能：\n   * - 顯示全屏世界地圖\n   * - 使用麥卡托投影\n   * - 響應式佈局設計\n   *\n   * 組件結構：\n   * - MapTab: 地圖顯示組件（全屏）\n   */\n\n  import MapTab from '../tabs/MapTab.vue';\n  import { useDataStore } from '@/stores/dataStore.js';\n\n  export default {\n    name: 'HomeView',\n    components: { MapTab },\n    setup() {\n      // 📦 存儲實例\n      const dataStore = useDataStore();\n\n      /**\n       * 🗺️ 設定地圖實例\n       * 將 D3.js 地圖實例傳遞給 dataStore\n       * @param {Object} map - D3.js 地圖實例（包含 svg, projection, path）\n       */\n      const setMapInstance = (map) => dataStore.setMapInstance(map);\n\n      return {\n        setMapInstance,\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🏠 全屏地圖容器 -->\n  <div class=\"vh-100 vw-100 overflow-hidden\">\n    <!-- 🗺️ 地圖組件（全屏） -->\n    <MapTab @map-ready=\"setMapInstance\" />\n  </div>\n</template>\n\n<style>\n  @import '../assets/css/common.css';\n</style>\n","<script>\n  /**\n   * ═══════════════════════════════════════════════════════════════════════════\n   * 🗺️ MapTab.vue - D3.js 台灣地圖組件\n   * ═══════════════════════════════════════════════════════════════════════════\n   *\n   * @fileoverview\n   * 這是一個基於 D3.js 的台灣地圖視覺化組件，同時顯示縣市界線和登革熱網格數據。\n   * 本組件負責載入、處理和渲染台灣直轄市、縣(市)界線和登革熱病例網格數據。\n   *\n   * ─────────────────────────────────────────────────────────────────────────\n   * 📋 核心功能\n   * ─────────────────────────────────────────────────────────────────────────\n   * 1. 縣市邊界渲染：\n   *    ✓ 載入 總統_得票地圖_合併.geojson\n   *    ✓ 繪製所有台灣直轄市、縣(市)界線\n   *    ✓ 根據最高得票率進行顏色編碼\n   *\n   * 2. 歷史邊界渲染：\n   *    ✓ 載入 乾隆臺灣番界.geojson\n   *    ✓ 繪製乾隆十五年及二十五年番界線\n   *    ✓ 淺灰色半透明填充作為背景層\n   *\n   * 3. 登革熱網格渲染：\n   *    ✓ 載入 dengue_grid_counts_1km_2023_land_only.geojson\n   *    ✓ 根據 level 屬性繪製5級風險等級網格\n   *    ✓ 只顯示病例數 > 0 的網格\n   *    ✓ 使用5級色票：深藍(1) → 綠(2) → 黃橙(3) → 橙(4) → 紅(5)（最上層）\n   *\n   * 4. 視覺元素：\n   *    ✓ 歷史邊界：淺灰色半透明填充，中灰邊框（底層）\n   *    ✓ 縣市界線：根據最高得票率填充顏色，深灰邊框（中層）\n   *    ✓ 登革熱網格：5級色票填充，無邊框（最上層）\n   *    ✓ 淺灰色地圖背景\n   *\n   * 5. 交互功能：\n   *    ✓ 滾輪縮放控制\n   *    ✓ 拖動平移導航\n   *    ✓ 滑鼠懸停顯示得票率資訊\n   *    ✓ 縣市區域高亮效果\n   *\n   * ─────────────────────────────────────────────────────────────────────────\n   * 🎨 配色主題\n   * ─────────────────────────────────────────────────────────────────────────\n   * 淺灰色    #f5f5f5  → 地圖背景\n   * 歷史邊界：\n   *   淺灰色  #e0e0e0  → 乾隆番界填充\n   *   中灰色  #999999  → 乾隆番界邊框\n   * 縣市邊界：\n   *   深灰色  #333333  → 縣市邊框\n   * 得票率顏色編碼：\n   *   白色    #ffffff  → 柯文哲 吳欣盈 (最高得票率)\n   *   綠色    #4caf50  → 賴清德 蕭美琴 (最高得票率)\n   *   藍色    #2196f3  → 侯友宜 趙少康 (最高得票率)\n   * 5級色票            → 登革熱風險等級（最上層）\n   *   Level 1  #1a237e → 深藍色\n   *   Level 2  #4caf50 → 綠色\n   *   Level 3  #fbc02d → 黃橙色\n   *   Level 4  #ff6f00 → 橙色\n   *   Level 5  #d32f2f → 紅色\n   *\n   * ─────────────────────────────────────────────────────────────────────────\n   * 🛠️ 技術棧\n   * ─────────────────────────────────────────────────────────────────────────\n   * @requires vue                 - Vue 3.2+ (Composition API)\n   * @requires d3                  - D3.js 7.8+ (地圖繪製庫)\n   * @requires @/stores/dataStore  - Pinia 狀態管理\n   *\n   * ─────────────────────────────────────────────────────────────────────────\n   * 📁 數據來源\n   * ─────────────────────────────────────────────────────────────────────────\n   * 縣市邊界：總統_得票地圖_合併.geojson\n   * 歷史邊界：乾隆臺灣番界.geojson\n   * 路徑：public/data/geojson/\n   *\n   * ─────────────────────────────────────────────────────────────────────────\n   * 🔧 使用方式\n   * ─────────────────────────────────────────────────────────────────────────\n   * <MapTab @map-ready=\"handleMapReady\" />\n   *\n   * @event map-ready - 地圖初始化完成時觸發，返回地圖實例\n   *\n   * ─────────────────────────────────────────────────────────────────────────\n   * 📝 維護者\n   * ─────────────────────────────────────────────────────────────────────────\n   * @author Kevin Cheng\n   * @version 4.0.0\n   * @since 2024\n   * @license MIT\n   *\n   * ═══════════════════════════════════════════════════════════════════════════\n   */\n\n  // ═══════════════════════════════════════════════════════════════════════════\n  // 📦 依賴導入 (Dependencies Import)\n  // ═══════════════════════════════════════════════════════════════════════════\n\n  // Vue 3 核心功能\n  import { ref, onMounted, onUnmounted, nextTick } from 'vue';\n\n  // D3.js 地圖庫\n  import * as d3 from 'd3';\n\n  // Pinia 狀態管理\n  import { useDataStore } from '@/stores/dataStore';\n\n  // ═══════════════════════════════════════════════════════════════════════════\n  // 🎯 組件定義 (Component Definition)\n  // ═══════════════════════════════════════════════════════════════════════════\n\n  export default {\n    name: 'MapTab',\n\n    // 組件觸發的事件\n    emits: [\n      'map-ready', // 地圖初始化完成時觸發，傳遞地圖實例\n    ],\n\n    /**\n     * ───────────────────────────────────────────────────────────────────────\n     * 🎬 組件設置函數 (Component Setup Function)\n     * ───────────────────────────────────────────────────────────────────────\n     * 使用 Vue 3 Composition API 設置組件邏輯\n     *\n     * @param {Object} _ - Props（本組件不使用）\n     * @param {Object} context - 設置上下文\n     * @param {Function} context.emit - 事件觸發函數\n     * @returns {Object} 返回模板可用的響應式數據和方法\n     */\n    setup(_, { emit }) {\n      // ═══════════════════════════════════════════════════════════════════════\n      // 📦 狀態管理與依賴 (State Management & Dependencies)\n      // ═══════════════════════════════════════════════════════════════════════\n\n      // Pinia 數據存儲（保留供未來擴展使用）\n      // eslint-disable-next-line no-unused-vars\n      const dataStore = useDataStore();\n\n      // ═══════════════════════════════════════════════════════════════════════\n      // 🗺️ 地圖相關變數 (Map-Related Variables)\n      // ═══════════════════════════════════════════════════════════════════════\n\n      /**\n       * 地圖 DOM 容器引用\n       * @type {Ref<HTMLElement|null>}\n       */\n      const mapContainer = ref(null);\n\n      /**\n       * D3.js SVG 元素\n       * @type {d3.Selection|null}\n       */\n      let svg = null;\n\n      /**\n       * D3.js 投影函數\n       * @type {d3.GeoProjection|null}\n       */\n      let projection = null;\n\n      /**\n       * D3.js 路徑生成器\n       * @type {d3.GeoPath|null}\n       */\n      let path = null;\n\n      /**\n       * D3.js 縮放行為\n       * @type {d3.ZoomBehavior|null}\n       */\n      let zoom = null;\n\n      /**\n       * SVG 主容器組\n       * @type {d3.Selection|null}\n       */\n      let g = null;\n\n      /**\n       * 工具提示元素\n       * @type {HTMLElement|null}\n       */\n      let tooltip = null;\n\n      // ═══════════════════════════════════════════════════════════════════════\n      // 🎛️ 控制狀態 (Control States)\n      // ═══════════════════════════════════════════════════════════════════════\n\n      /**\n       * 地圖就緒狀態標記\n       * true = 地圖已初始化完成，false = 尚未初始化\n       * @type {Ref<boolean>}\n       */\n      const isMapReady = ref(false);\n\n      /**\n       * 地圖容器唯一 ID\n       * 使用隨機字符串確保多實例時不會衝突\n       * @type {Ref<string>}\n       */\n      const mapContainerId = ref(`leaflet-map-${Math.random().toString(36).substr(2, 9)}`);\n\n      /**\n       * 顯示模式\n       * 'map' = 使用地圖投影顯示（目前結果）\n       * 'grid' = 直接使用 grid_x, grid_y 繪製網格\n       * @type {Ref<string>}\n       */\n      const displayMode = ref('map');\n\n      // ═══════════════════════════════════════════════════════════════════════\n      // 📊 GeoJSON 數據儲存 (GeoJSON Data Storage)\n      // ═══════════════════════════════════════════════════════════════════════\n\n      /**\n       * 縣市 GeoJSON 數據\n       * 來源：總統_得票地圖_合併.geojson\n       * @type {Ref<Object|null>}\n       */\n      const countyData = ref(null);\n\n      /**\n       * 全域勝出得票率範圍（用于透明度正規化）\n       * min: 所有鄉鎮中勝出者得票率的最小值\n       * max: 所有鄉鎮中勝出者得票率的最大值\n       */\n      let globalMinWinningPct = 100;\n      let globalMaxWinningPct = 0;\n      let globalMinWinnerFeature = null; // { COUNTYNAME, TOWNNAME, pct }\n      let globalMaxWinnerFeature = null; // { COUNTYNAME, TOWNNAME, pct }\n\n      const computeWinningVoteRange = () => {\n        globalMinWinningPct = 100;\n        globalMaxWinningPct = 0;\n        if (!countyData.value?.features) return;\n        for (const f of countyData.value.features) {\n          const p = f.properties || {};\n          const v1 = p['(1) 得票率 (%)'] || 0;\n          const v2 = p['(2) 得票率 (%)'] || 0;\n          const v3 = p['(3) 得票率 (%)'] || 0;\n          const win = Math.max(v1, v2, v3);\n          if (win < globalMinWinningPct) {\n            globalMinWinningPct = win;\n            globalMinWinnerFeature = {\n              COUNTYNAME: p.COUNTYNAME,\n              TOWNNAME: p.TOWNNAME,\n              pct: win,\n            };\n          }\n          if (win > globalMaxWinningPct) {\n            globalMaxWinningPct = win;\n            globalMaxWinnerFeature = {\n              COUNTYNAME: p.COUNTYNAME,\n              TOWNNAME: p.TOWNNAME,\n              pct: win,\n            };\n          }\n        }\n        // 邊界保護\n        if (globalMinWinningPct > globalMaxWinningPct) {\n          globalMinWinningPct = globalMaxWinningPct;\n        }\n        // 輸出摘要到主控台\n        if (globalMaxWinnerFeature) {\n          console.log(\n            `[MapTab] 最高勝出得票率: ${globalMaxWinnerFeature.pct.toFixed(2)}% → 100% opacity @ ${globalMaxWinnerFeature.COUNTYNAME} ${globalMaxWinnerFeature.TOWNNAME}`\n          );\n        }\n        if (globalMinWinnerFeature) {\n          console.log(\n            `[MapTab] 最低勝出得票率: ${globalMinWinnerFeature.pct.toFixed(2)}% → 20% opacity @ ${globalMinWinnerFeature.COUNTYNAME} ${globalMinWinnerFeature.TOWNNAME}`\n          );\n        }\n      };\n\n      /**\n       * 乾隆臺灣番界 GeoJSON 數據\n       * 來源：乾隆臺灣番界.geojson\n       * @type {Ref<Object|null>}\n       */\n      const historicalBoundaryData = ref(null);\n\n      /**\n       * 📥 載入直轄市、縣(市)界線 GeoJSON 數據\n       */\n      const loadCountyData = async () => {\n        try {\n          console.log('[MapTab] 開始載入直轄市、縣(市)界線 GeoJSON 數據...');\n\n          // 載入縣市 GeoJSON 檔案\n          const countyResponse = await fetch(\n            `${process.env.BASE_URL}data/geojson/總統_得票地圖_合併.geojson`\n          );\n\n          // 檢查響應\n          if (!countyResponse.ok) {\n            throw new Error(`直轄市、縣(市)界線數據載入失敗: HTTP ${countyResponse.status}`);\n          }\n\n          // 解析 JSON\n          countyData.value = await countyResponse.json();\n\n          console.log('[MapTab] 直轄市、縣(市)界線數據載入成功');\n          console.log('  - 縣市數量:', countyData.value.features?.length || 0);\n\n          // 計算全域勝出得票率範圍供透明度映射\n          computeWinningVoteRange();\n\n          return true;\n        } catch (error) {\n          console.error('[MapTab] 直轄市、縣(市)界線數據載入失敗:', error);\n          return false;\n        }\n      };\n\n      /**\n       * 📥 載入乾隆臺灣番界 GeoJSON 數據\n       */\n      const loadHistoricalBoundaryData = async () => {\n        try {\n          console.log('[MapTab] 開始載入乾隆臺灣番界 GeoJSON 數據...');\n\n          // 載入歷史邊界 GeoJSON 檔案\n          const historicalResponse = await fetch(\n            `${process.env.BASE_URL}data/geojson/乾隆臺灣番界.geojson`\n          );\n\n          // 檢查響應\n          if (!historicalResponse.ok) {\n            throw new Error(`乾隆臺灣番界數據載入失敗: HTTP ${historicalResponse.status}`);\n          }\n\n          // 解析 JSON\n          historicalBoundaryData.value = await historicalResponse.json();\n\n          console.log('[MapTab] 乾隆臺灣番界數據載入成功');\n          console.log('  - 邊界線數量:', historicalBoundaryData.value.features?.length || 0);\n\n          return true;\n        } catch (error) {\n          console.error('[MapTab] 乾隆臺灣番界數據載入失敗:', error);\n          return false;\n        }\n      };\n\n      /**\n       * 🛠️ 創建工具提示元素\n       */\n      const createTooltip = () => {\n        if (!mapContainer.value) return;\n\n        // 移除已存在的工具提示\n        const existingTooltip = mapContainer.value.querySelector('.map-tooltip');\n        if (existingTooltip) {\n          existingTooltip.remove();\n        }\n\n        // 創建新的工具提示元素\n        tooltip = document.createElement('div');\n        tooltip.className = 'map-tooltip';\n        tooltip.style.position = 'absolute';\n        tooltip.style.pointerEvents = 'none';\n        tooltip.style.opacity = '0';\n        tooltip.style.padding = '4px 8px';\n\n        mapContainer.value.appendChild(tooltip);\n        console.log('[MapTab] 工具提示元素創建成功');\n      };\n\n      /**\n       * 🎨 根據得票率決定顏色\n       * @param {Object} properties - GeoJSON 屬性\n       * @returns {string} 顏色代碼\n       */\n      const getColorByVotePercentage = (properties) => {\n        const vote1 = properties['(1) 得票率 (%)'] || 0;\n        const vote2 = properties['(2) 得票率 (%)'] || 0;\n        const vote3 = properties['(3) 得票率 (%)'] || 0;\n\n        // 找出最高得票率\n        const maxVote = Math.max(vote1, vote2, vote3);\n\n        // 根據最高得票率決定顏色\n        if (maxVote === vote1) {\n          return '#00A8AC'; // 柯文哲 吳欣盈 - 柔和青藍\n        } else if (maxVote === vote2) {\n          return '#4CAF50'; // 賴清德 蕭美琴 - 清新綠\n        } else {\n          return '#1976D2'; // 侯友宜 趙少康 - 深藍\n        }\n      };\n\n      /**\n       * 根據最高得票率回傳透明度 0.2~1.0\n       * 最高得票率 = 100% opacity，最低得票率 = 20% opacity\n       */\n      const getOpacityByVotePercentage = (properties) => {\n        const vote1 = properties['(1) 得票率 (%)'] || 0;\n        const vote2 = properties['(2) 得票率 (%)'] || 0;\n        const vote3 = properties['(3) 得票率 (%)'] || 0;\n        const maxVote = Math.max(vote1, vote2, vote3);\n\n        // 以全域範圍做正規化：min → 0.2、max → 1.0\n        const minV = globalMinWinningPct;\n        const maxV = globalMaxWinningPct;\n        const range = Math.max(0, maxV - minV);\n        if (range === 0) return 1.0; // 所有區相同得票率，給滿不透明\n        if (Math.abs(maxVote - maxV) < 1e-9) return 1.0; // 全域最高者強制 100%\n        const normalized = (maxVote - minV) / range; // 0~1\n        const opacity = 0.2 + normalized * 0.8;\n        return opacity;\n      };\n\n      /**\n       * 🗺️ 繪製乾隆臺灣番界\n       */\n      const drawHistoricalBoundary = () => {\n        if (!g || !historicalBoundaryData.value) {\n          console.error(\n            '[MapTab] 無法繪製乾隆臺灣番界: g=',\n            !!g,\n            'historicalBoundaryData=',\n            !!historicalBoundaryData.value\n          );\n          return;\n        }\n\n        try {\n          console.log('[MapTab] 開始繪製乾隆臺灣番界 GeoJSON');\n\n          const getHistoricalStroke = (name) => {\n            if (name === '紅線') return '#e53935'; // 紅\n            if (name === '藍線') return '#1e88e5'; // 藍\n            if (name === '紫線') return '#8e24aa'; // 紫\n            if (name && name.includes('藍線暫定界')) return '#1e88e5'; // 暫定界用藍色\n            return '#999999';\n          };\n\n          const getDashArray = (name) => {\n            if (name && name.includes('暫定界')) return '6,4';\n            return null;\n          };\n\n          // 繪製歷史邊界線（以 polyline 呈現，無填色）\n          g.selectAll('.historical-boundary')\n            .data(historicalBoundaryData.value.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .attr('class', 'historical-boundary')\n            .attr('fill', 'none')\n            .attr('stroke', (d) => getHistoricalStroke(d.properties?.name))\n            .attr('stroke-width', 2)\n            .attr('stroke-opacity', 0.95)\n            .attr('stroke-linecap', 'round')\n            .attr('stroke-linejoin', 'round')\n            .attr('stroke-dasharray', (d) => getDashArray(d.properties?.name))\n            .on('mouseover', function (event, d) {\n              // 顯示工具提示\n              const properties = d.properties;\n              const tooltipContent = `\n                <div style=\"font-weight: bold; margin-bottom: 4px;\">${properties.name}</div>\n                <div style=\"color: #666;\">${properties.Note}</div>\n              `;\n\n              tooltip.innerHTML = tooltipContent;\n              tooltip.style.opacity = '1';\n            })\n            .on('mousemove', function (event) {\n              // 更新工具提示位置\n              tooltip.style.left = event.pageX + 10 + 'px';\n              tooltip.style.top = event.pageY - 10 + 'px';\n            })\n            .on('mouseout', function () {\n              // 隱藏工具提示\n              tooltip.style.opacity = '0';\n            });\n\n          console.log('[MapTab] 乾隆臺灣番界 GeoJSON 繪製完成');\n        } catch (error) {\n          console.error('[MapTab] 乾隆臺灣番界 GeoJSON 繪製失敗:', error);\n        }\n      };\n\n      /**\n       * 🗺️ 繪製直轄市、縣(市)界線\n       */\n      const drawCounties = () => {\n        if (!g || !countyData.value) {\n          console.error(\n            '[MapTab] 無法繪製直轄市、縣(市)界線: g=',\n            !!g,\n            'countyData=',\n            !!countyData.value\n          );\n          return;\n        }\n\n        try {\n          console.log('[MapTab] 開始繪製直轄市、縣(市)界線 GeoJSON');\n\n          // 繪製所有縣市\n          g.selectAll('.county')\n            .data(countyData.value.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .attr('class', 'county')\n            .attr('fill', (d) => getColorByVotePercentage(d.properties)) // 根據得票率填充顏色\n            .attr('fill-opacity', (d) => getOpacityByVotePercentage(d.properties))\n            .attr('stroke', '#ffffff') // 白色邊框\n            .attr('stroke-width', 0.5)\n            .attr('stroke-opacity', 0.8)\n            .on('mouseover', function (event, d) {\n              // 顯示工具提示\n              const properties = d.properties;\n              const vote1 = properties['(1) 得票率 (%)'] || 0;\n              const vote2 = properties['(2) 得票率 (%)'] || 0;\n              const vote3 = properties['(3) 得票率 (%)'] || 0;\n              const count1 = properties['(1) 柯文哲 吳欣盈'] || 0;\n              const count2 = properties['(2) 賴清德 蕭美琴'] || 0;\n              const count3 = properties['(3) 侯友宜 趙少康'] || 0;\n\n              // 找出最高得票率和對應的候選人\n              const maxVote = Math.max(vote1, vote2, vote3);\n              let winnerName = '';\n              if (maxVote === vote1) winnerName = '柯文哲 吳欣盈';\n              else if (maxVote === vote2) winnerName = '賴清德 蕭美琴';\n              else winnerName = '侯友宜 趙少康';\n\n              // 計算透明度（使用全域範圍正規化）\n              const minV = globalMinWinningPct;\n              const maxV = globalMaxWinningPct;\n              const range = Math.max(0, maxV - minV);\n              let opacity = 1.0;\n              if (range !== 0) {\n                if (Math.abs(maxVote - maxV) < 1e-9) {\n                  opacity = 1.0;\n                } else {\n                  const normalized = (maxVote - minV) / range;\n                  opacity = 0.2 + normalized * 0.8;\n                }\n              }\n\n              // 邊界高亮為紅色\n              d3.select(this).attr('stroke', '#ff0000').attr('stroke-width', 1);\n\n              const tooltipContent = `\n                <div style=\"font-weight: bold; margin-bottom: 4px;\">${properties.COUNTYNAME} ${properties.TOWNNAME}</div>\n                <div style=\"margin-bottom: 6px; padding: 4px; background: rgba(0,0,0,0.1); border-radius: 3px;\">\n                  <strong>最高得票：${winnerName}</strong><br>\n                  <small>透明度：${(opacity * 100).toFixed(1)}%</small>\n                </div>\n                <div style=\"color: #00A8AC;\">柯文哲 吳欣盈: ${vote1.toFixed(1)}% (${count1.toLocaleString()}票)</div>\n                <div style=\"color: #4CAF50;\">賴清德 蕭美琴: ${vote2.toFixed(1)}% (${count2.toLocaleString()}票)</div>\n                <div style=\"color: #1976D2;\">侯友宜 趙少康: ${vote3.toFixed(1)}% (${count3.toLocaleString()}票)</div>\n              `;\n\n              tooltip.innerHTML = tooltipContent;\n              tooltip.style.opacity = '1';\n            })\n            .on('mousemove', function (event) {\n              // 更新工具提示位置\n              tooltip.style.left = event.pageX + 10 + 'px';\n              tooltip.style.top = event.pageY - 10 + 'px';\n            })\n            .on('mouseout', function () {\n              // 隱藏工具提示\n              tooltip.style.opacity = '0';\n              // 邊界顏色還原為白色\n              d3.select(this).attr('stroke', '#ffffff').attr('stroke-width', 0.5);\n            });\n\n          console.log('[MapTab] 直轄市、縣(市)界線 GeoJSON 繪製完成');\n        } catch (error) {\n          console.error('[MapTab] 直轄市、縣(市)界線 GeoJSON 繪製失敗:', error);\n        }\n      };\n\n      /**\n       * 🎛️ 切換顯示模式\n       * @param {string} mode - 'map' 或 'grid'\n       */\n      const toggleDisplayMode = async () => {\n        // 僅保留地圖模式\n        displayMode.value = 'map';\n        console.log('[MapTab] 切換顯示模式: map (grid 已停用)');\n\n        if (displayMode.value === 'map') {\n          // 地圖模式：需要地圖投影，載入縣市界線和歷史邊界\n          if (!countyData.value) {\n            await loadCountyData();\n          }\n          if (!historicalBoundaryData.value) {\n            await loadHistoricalBoundaryData();\n          }\n\n          // 清除舊的 SVG（如果從其他模式切換過來）\n          if (svg && !projection) {\n            svg.remove();\n            svg = null;\n          }\n\n          if (!projection || !path) {\n            // 如果還沒有創建地圖，先創建\n            const rect = mapContainer.value.getBoundingClientRect();\n            if (rect.width > 0 && rect.height > 0) {\n              const width = rect.width;\n              const height = rect.height;\n\n              // 清除舊的 SVG\n              if (svg) {\n                svg.remove();\n              }\n\n              // 創建 SVG 和地圖投影\n              svg = d3\n                .select(mapContainer.value)\n                .append('svg')\n                .attr('width', width)\n                .attr('height', height)\n                .style('background', '#ffffff');\n\n              projection = d3\n                .geoMercator()\n                .center([121, 23.5])\n                .scale(12000)\n                .translate([width / 2, height / 2]);\n\n              path = d3.geoPath().projection(projection);\n              g = svg.append('g');\n\n              zoom = d3\n                .zoom()\n                .scaleExtent([0.5, 50])\n                .on('zoom', (event) => {\n                  g.attr('transform', event.transform);\n                });\n\n              svg.call(zoom);\n\n              // 重置縮放狀態，確保切換模式時不會受到之前模式的影響\n              svg.call(zoom.transform, d3.zoomIdentity);\n\n              createTooltip();\n              isMapReady.value = true;\n            }\n          } else {\n            // 如果已經創建了地圖，重置縮放狀態\n            if (svg && zoom) {\n              svg.call(zoom.transform, d3.zoomIdentity);\n            }\n          }\n          // 先繪製縣市界線（底層）\n          drawCounties();\n          // 再繪製歷史邊界（最上層）\n          if (historicalBoundaryData.value) {\n            drawHistoricalBoundary();\n          }\n        }\n      };\n\n      /**\n       * 🏗️ 創建地圖實例\n       * 初始化 D3.js 地圖並設定基本配置\n       */\n      const createMap = () => {\n        if (!mapContainer.value) return false;\n\n        const rect = mapContainer.value.getBoundingClientRect();\n        if (rect.width === 0 || rect.height === 0) {\n          console.warn('[MapTab] 容器尺寸為零，延遲初始化');\n          return false;\n        }\n\n        try {\n          const width = rect.width;\n          const height = rect.height;\n\n          // 台灣中心位置：緯度 23.5°, 經度 121°\n\n          // 創建 SVG 元素\n          svg = d3\n            .select(mapContainer.value)\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', '#ffffff'); // 純白色背景\n\n          // 創建投影 - 麥卡托投影，聚焦在台灣\n          projection = d3\n            .geoMercator()\n            .center([121, 23.5]) // 中心點在台灣\n            .scale(12000) // 更大的縮放比例，更聚焦在台灣\n            .translate([width / 2, height / 2]);\n\n          // 創建路徑生成器\n          path = d3.geoPath().projection(projection);\n\n          // 創建容器組\n          g = svg.append('g');\n\n          // 設置縮放行為\n          zoom = d3\n            .zoom()\n            .scaleExtent([0.5, 50]) // 允許縮放 0.5x 到 50x\n            .on('zoom', (event) => {\n              g.attr('transform', event.transform);\n            });\n\n          svg.call(zoom);\n\n          // 重置縮放狀態，確保切換模式時不會受到之前模式的影響\n          svg.call(zoom.transform, d3.zoomIdentity);\n\n          // 創建工具提示元素\n          createTooltip();\n\n          isMapReady.value = true;\n\n          // 將地圖實例傳遞給父組件\n          emit('map-ready', { svg, projection, path });\n\n          console.log('[MapTab] D3.js 地圖創建成功');\n          return true;\n        } catch (error) {\n          console.error('[MapTab] D3.js 地圖創建失敗:', error);\n          return false;\n        }\n      };\n\n      /**\n       * 🚀 初始化地圖\n       * 根據初始顯示模式創建對應的視圖\n       */\n      const initMap = async () => {\n        let attempts = 0;\n        const maxAttempts = 20;\n\n        // 根據顯示模式載入不同的數據\n        if (displayMode.value === 'map') {\n          // 地圖模式：載入縣市界線和歷史邊界數據\n          console.log('[MapTab] 開始載入地圖模式數據...');\n          const countyLoaded = await loadCountyData();\n          const historicalLoaded = await loadHistoricalBoundaryData();\n\n          if (!countyLoaded) {\n            console.error('[MapTab] 無法載入縣市界線數據');\n            return;\n          }\n\n          if (!historicalLoaded) {\n            console.warn('[MapTab] 無法載入乾隆臺灣番界數據，將只顯示縣市界線');\n          }\n\n          console.log('[MapTab] 數據載入完成，開始創建地圖');\n\n          const tryCreateMap = async () => {\n            if (attempts >= maxAttempts) {\n              console.error('[MapTab] 地圖初始化失敗，已達到最大嘗試次數');\n              return;\n            }\n\n            attempts++;\n            console.log(`[MapTab] 嘗試創建地圖 (${attempts}/${maxAttempts})`);\n\n            if (createMap()) {\n              console.log('[MapTab] 地圖創建成功，開始繪製圖層');\n              // 先繪製縣市界線（底層）\n              drawCounties();\n              // 再繪製歷史邊界（最上層）\n              if (historicalBoundaryData.value) {\n                drawHistoricalBoundary();\n              }\n            } else {\n              console.log('[MapTab] 地圖創建失敗，100ms 後重試');\n              setTimeout(tryCreateMap, 100);\n            }\n          };\n\n          tryCreateMap();\n        }\n      };\n\n      // 🧹 生命週期：組件掛載\n      onMounted(() => {\n        nextTick(() => {\n          initMap();\n        });\n      });\n\n      // 🧹 生命週期：組件卸載\n      onUnmounted(() => {\n        if (svg) {\n          svg.remove();\n          svg = null;\n        }\n\n        // 清理工具提示\n        if (tooltip) {\n          tooltip.remove();\n          tooltip = null;\n        }\n\n        projection = null;\n        path = null;\n        zoom = null;\n        g = null;\n        isMapReady.value = false;\n      });\n\n      // 📤 返回組件公開的屬性和方法\n      return {\n        mapContainer,\n        mapContainerId,\n        displayMode,\n        toggleDisplayMode,\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🗺️ 地圖主容器 -->\n  <div id=\"map-container\" class=\"h-100 w-100 position-relative bg-transparent z-0\">\n    <!-- 🗺️ Leaflet 地圖容器 -->\n    <div :id=\"mapContainerId\" ref=\"mapContainer\" class=\"h-100 w-100\"></div>\n  </div>\n</template>\n\n<style scoped>\n  @import '../assets/css/common.css';\n\n  #map-container {\n    overflow: hidden;\n    background: #ffffff; /* 純白色背景 */\n  }\n\n  :deep(.leaflet-container) {\n    background: #ffffff; /* 純白色背景 */\n  }\n\n  :deep(.leaflet-popup-content-wrapper) {\n    background: rgba(0, 43, 127, 0.95); /* 諾魯深藍色半透明 */\n    color: #ffc61e; /* 金黃色文字 */\n    border: 2px solid #ffc61e; /* 金黃色邊框 */\n  }\n\n  :deep(.leaflet-popup-tip) {\n    background: rgba(0, 43, 127, 0.95); /* 諾魯深藍色半透明 */\n  }\n\n  :deep(.leaflet-tooltip) {\n    background-color: rgba(0, 43, 127, 0.95) !important; /* 諾魯深藍色 */\n    color: #ffc61e !important; /* 金黃色文字 */\n    border: 1px solid #ffc61e !important; /* 金黃色邊框 */\n    font-size: 14px;\n    padding: 8px 12px;\n    border-radius: 4px;\n    line-height: 1.4;\n  }\n\n  :deep(.map-tooltip) {\n    background-color: rgba(0, 0, 0, 0.9); /* 深色半透明背景 */\n    color: #fff; /* 白色文字 */\n    border: 2px solid #fff; /* 白色邊框 */\n    border-radius: 8px; /* 圓角 */\n    padding: 12px; /* 內邊距 */\n    font-size: 14px; /* 字體大小 */\n    font-family: 'Arial', sans-serif; /* 字體 */\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3); /* 陰影 */\n    z-index: 1000; /* 確保在最上層 */\n    max-width: 250px; /* 最大寬度 */\n    line-height: 1.4; /* 行高 */\n  }\n</style>\n","/**\n * 📦 數據存儲模組 (Data Store Module)\n *\n * 管理城市圖層數據和地圖導航功能\n * 使用 Pinia 狀態管理系統和 Vue 3 Composition API\n */\n\n// 核心依賴\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\n\n/**\n * 🏪 數據存儲商店定義 (Data Store Definition)\n *\n * 使用 Pinia 的 defineStore 創建一個名為 'data' 的狀態管理商店。\n * 採用 Composition API 語法，提供更好的 TypeScript 支援和代碼組織。\n *\n * @returns {Object} 包含所有狀態和方法的商店對象\n */\nexport const useDataStore = defineStore(\n  'data', // 商店唯一標識符\n  () => {\n    // ------------------------------------------------------------\n    // 地圖實例管理\n    const mapInstance = ref(null);\n\n    const setMapInstance = (map) => {\n      mapInstance.value = map;\n    };\n\n    return {\n      mapInstance, // 地圖實例\n      setMapInstance, // 設定地圖實例\n    };\n  },\n  {\n    persist: true,\n  }\n);\n","import { render } from \"./MapTab.vue?vue&type=template&id=206e51b8&scoped=true\"\nimport script from \"./MapTab.vue?vue&type=script&lang=js\"\nexport * from \"./MapTab.vue?vue&type=script&lang=js\"\n\nimport \"./MapTab.vue?vue&type=style&index=0&id=206e51b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-206e51b8\"]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=3342f0b3\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=3342f0b3&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * 🚀 Vue Router 路由配置\n *\n * 長照空間分析系統的路由管理\n * 使用 Vue Router 4 進行單頁應用程式路由控制\n *\n * @author 長照空間分析團隊\n * @version 1.0.0\n */\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\n\n/**\n * 📍 路由配置陣列\n * 定義應用程式的所有路由規則\n */\nconst routes = [\n  {\n    path: '/', // 🏠 根路徑\n    name: 'Home', // 路由名稱\n    component: HomeView, // 對應的 Vue 組件\n  },\n];\n\n/**\n * 🛣️ 路由器實例創建\n *\n * 配置說明：\n * - history: 使用 HTML5 History API 模式\n * - base: 設定應用程式的基礎路徑為 '/30DayMapChallenge-27_Boundaries/'\n * - routes: 路由配置陣列\n */\nconst router = createRouter({\n  history: createWebHistory('/30DayMapChallenge-27_Boundaries/'),\n  routes,\n});\n\nexport default router;\n","/**\n * 🚀 應用程式主入口文件 (Main Application Entry Point)\n *\n * 本文件是整個 Vue.js 應用程式的啟動入口，負責初始化所有核心系統和第三方依賴。\n * 採用模組化設計，確保各系統間的依賴關係清晰明確。\n *\n * 📋 主要功能模組：\n * 1. 🎨 樣式系統初始化 - Bootstrap 5 + 自定義主題 + 第三方 UI 庫樣式\n * 2. 🧩 Vue 3 應用程式核心 - 使用 Composition API 的現代化 Vue 架構\n * 3. 🗺️ 路由系統配置 - Vue Router 4 單頁應用程式導航管理\n * 4. 📦 狀態管理系統 - Pinia 全域狀態管理和數據持久化\n * 5. 🌍 DOM 掛載與渲染 - 將應用程式掛載到 HTML 容器中\n * 6. 🔧 第三方庫整合 - D3.js 地圖、Font Awesome 圖示、Bootstrap 組件\n *\n * 🏗️ 技術架構：\n * - Vue 3.3+ (Composition API + <script setup> 語法)\n * - Vue Router 4 (聲明式路由配置)\n * - Pinia 2+ (輕量級狀態管理，替代 Vuex)\n * - Bootstrap 5.3+ (響應式 UI 框架)\n * - D3.js 7+ (數據可視化和地圖繪製庫)\n * - Font Awesome 6+ (向量圖示庫)\n *\n * 🔄 初始化流程：\n * 1. 載入所有必要的樣式和 JavaScript 依賴\n * 2. 創建 Vue 應用程式實例\n * 3. 配置並註冊路由系統\n * 4. 配置並註冊狀態管理系統\n * 5. 將應用程式掛載到 DOM 元素\n * 6. 輸出初始化完成日誌\n *\n * 📁 相關文件：\n * - ./App.vue - 根組件\n * - ./router/index.js - 路由配置\n * - ./stores/ - Pinia 狀態管理模組\n * - ./assets/css/ - 自定義樣式文件\n */\n\n// 🔧 Vue 核心模組引入 (Vue Core Module Imports)\nimport { createApp } from 'vue';\nimport { createPinia } from 'pinia';\n\n// 🧩 應用程式組件引入 (Application Component Imports)\nimport App from './App.vue';\nimport router from './router';\n\n// 🎨 引入第三方樣式文件 (Import Third-Party Style Files)\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap 5 CSS 框架\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // Font Awesome 圖示庫\n\n// 🎨 引入自定義樣式文件 (Import Custom Style Files)\nimport './assets/css/common.css'; // 共用樣式（已包含變數和主題配置）\n\n// ⚙️ 引入第三方 JavaScript 文件 (Import Third-Party JavaScript Files)\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'; // Bootstrap JS（含 Popper.js）\n// 提供下拉選單、模態框、工具提示等互動功能\n\n// 🐛 調試資訊輸出 (Debug Information Output)\nconsole.log('🎨 樣式文件載入完成');\n\n// 🚀 創建並配置 Vue 應用程式實例 (Create and Configure Vue Application Instance)\nconst app = createApp(App);\n\n// 📦 創建 Pinia 狀態管理實例 (Create Pinia State Management Instance)\nconst pinia = createPinia();\n\n// 🗺️ 註冊 Vue Router 路由系統 (Register Vue Router Navigation System)\napp.use(router);\n\n// 📦 註冊 Pinia 狀態管理系統 (Register Pinia State Management System)\napp.use(pinia);\n\n// 🌍 掛載應用程式到 DOM 元素 (Mount Application to DOM Element)\n// 將 Vue 應用程式掛載到 index.html 中 id=\"app\" 的元素上\napp.mount('#app');\n\n// 🐛 應用程式啟動完成的調試資訊 (Application Startup Debug Information)\nconsole.log('🚀 空間分析視覺化平台已啟動');\nconsole.log('📦 Pinia 狀態管理已初始化');\nconsole.log('🗺️ Vue Router 路由系統已就緒');\nconsole.log('🎨 Bootstrap 5 UI 框架已載入');\nconsole.log('🗺️ D3.js 地圖庫已準備就緒');\nconsole.log('🔤 Font Awesome 圖示庫已載入');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_30DayMapChallenge_27_Boundaries\"] = self[\"webpackChunk_30DayMapChallenge_27_Boundaries\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9960); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_router_view","name","__exports__","render","_component_MapTab","onMapReady","$setup","setMapInstance","mapContainerId","ref","useDataStore","defineStore","mapInstance","map","value","persist","emits","setup","_","emit","mapContainer","svg","projection","path","zoom","g","tooltip","isMapReady","Math","random","toString","substr","displayMode","countyData","globalMinWinningPct","globalMaxWinningPct","globalMinWinnerFeature","globalMaxWinnerFeature","computeWinningVoteRange","features","f","p","properties","v1","v2","v3","win","max","COUNTYNAME","TOWNNAME","pct","console","log","toFixed","historicalBoundaryData","loadCountyData","async","countyResponse","fetch","ok","Error","status","json","length","error","loadHistoricalBoundaryData","historicalResponse","createTooltip","existingTooltip","querySelector","remove","document","createElement","className","style","position","pointerEvents","opacity","padding","appendChild","getColorByVotePercentage","vote1","vote2","vote3","maxVote","getOpacityByVotePercentage","minV","maxV","range","abs","normalized","drawHistoricalBoundary","getHistoricalStroke","includes","getDashArray","selectAll","data","enter","append","attr","d","on","event","tooltipContent","Note","innerHTML","left","pageX","top","pageY","drawCounties","count1","count2","count3","winnerName","d3","this","toLocaleString","toggleDisplayMode","call","transform","rect","getBoundingClientRect","width","height","center","scale","translate","scaleExtent","createMap","warn","initMap","attempts","maxAttempts","countyLoaded","historicalLoaded","tryCreateMap","setTimeout","onMounted","nextTick","onUnmounted","components","MapTab","dataStore","routes","component","HomeView","router","createRouter","history","createWebHistory","app","createApp","App","pinia","createPinia","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}